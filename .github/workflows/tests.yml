name: Tests

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - main

env:
  GEANT4_GIT_TAG: v10.7.1
  GEANT4_SOURCE_DIR: geant4_source
  GEANT4_BUILD_DIR: geant4_build
  GEANT4_INSTALL_DIR: geant4_install


jobs:
  run_tests:
    name: Tests on ${{ matrix.os }}/${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ['3.6', '3.9']
        exclude:
          - os: macos-latest
            python-version: '3.6'
          - os: windows-latest
            python-version: '3.6'
 
    steps:
      - name: Cache Geant4 install
        uses: actions/cache@v2
        id: g4cache
        with:
          path: ${{ github.workspace }}/${{ env.GEANT4_INSTALL_DIR }}
          key: ${{ env.GEANT4_GIT_TAG }}v2

      - uses: actions/checkout@v2
        if: steps.g4cache.outputs.cache-hit != 'true'
        with:
          repository: Geant4/geant4
          ref: ${{ env.GEANT4_GIT_TAG }}
          path: ${{ env.GEANT4_SOURCE_DIR }}

      - uses: lukka/get-cmake@latest
        if: steps.g4cache.outputs.cache-hit != 'true'

      - name: CMake configure Geant4 Unix
        if: steps.g4cache.outputs.cache-hit != 'true' && runner.os != 'Windows'
        run: >
            cmake -E env CXXFLAGS="-fPIC"
            cmake -E env CFLAGS="-fPIC" 
            cmake
            -GNinja
            -DBUILD_STATIC_LIBS=ON
            -DBUILD_SHARED_LIBS=OFF
            -DGEANT4_INSTALL_EXAMPLES=OFF
            -DGEANT4_USE_SYSTEM_EXPAT=OFF
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/${{ env.GEANT4_INSTALL_DIR }}"
            -S "${{ github.workspace }}/${{ env.GEANT4_SOURCE_DIR }}"
            -B "${{ github.workspace }}/${{ env.GEANT4_BUILD_DIR }}"

      - name: CMake configure Geant4 Windows
        if: steps.g4cache.outputs.cache-hit != 'true' && runner.os == 'Windows'
        run: >
            cmake
            -DBUILD_STATIC_LIBS=ON
            -DBUILD_SHARED_LIBS=OFF
            -DGEANT4_INSTALL_EXAMPLES=OFF
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/${{ env.GEANT4_INSTALL_DIR }}"
            -S "${{ github.workspace }}/${{ env.GEANT4_SOURCE_DIR }}"
            -B "${{ github.workspace }}/${{ env.GEANT4_BUILD_DIR }}"

      - name: CMake build Geant4
        if: steps.g4cache.outputs.cache-hit != 'true'
        run: cmake --build "${{ github.workspace }}/${{ env.GEANT4_BUILD_DIR }}" --config Release

      - name: CMake install Geant4
        if: steps.g4cache.outputs.cache-hit != 'true'
        run: >
            cmake
            --build "${{ github.workspace }}/${{ env.GEANT4_BUILD_DIR }}"
            --config Release
            --target install

      - name: Setup environment variables
        shell: bash
        run: |
            echo "${{ github.workspace }}/${{ env.GEANT4_INSTALL_DIR }}/bin" >> $GITHUB_PATH
            echo "HOME=${{ github.workspace }}" >> $GITHUB_ENV

      - uses: actions/checkout@v2
        with:
          submodules: true
          path: ${{ github.event.repository.name }}

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Add Python requirements
        run: python -m pip install --upgrade setuptools psutil

      - name: Install ${{ github.event.repository.name }}
        run: python -m pip install "${{ github.workspace }}/${{ github.event.repository.name }}"

      - name: Cache Geant4 datasets
        uses: actions/cache@v2
        with:
          key: ${{ env.GEANT4_GIT_TAG }}_datasets
          path: ${{ github.workspace }}/.geant4_pybind

      - name: Run B1 (sanity) test
        run: python ${{ github.event.repository.name }}/tests/test_B1.py

      - name: Run example tests
        if: runner.os == 'Linux'
        run: python ${{ github.event.repository.name }}/tests/test_examples.py
