name: Wheels

on:
  release:
    types:
      - published

env:
  GEANT4_GIT_TAG: v10.7.2
  GEANT4_SOURCE_DIR: geant4_source
  GEANT4_BUILD_DIR: geant4_build
  GEANT4_INSTALL_DIR: geant4_install

jobs:

  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build SDist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz


  build_wheels:
    name: Wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
 
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Cache Geant4 install
        uses: actions/cache@v2
        id: g4cache
        with:
          path: ${{ github.workspace }}/${{ env.GEANT4_INSTALL_DIR }}
          key: ${{ env.GEANT4_GIT_TAG }}v2

      - uses: actions/checkout@v2
        if: steps.g4cache.outputs.cache-hit != 'true'
        with:
          repository: Geant4/geant4
          ref: ${{ env.GEANT4_GIT_TAG }}
          path: ${{ env.GEANT4_SOURCE_DIR }}

      - uses: lukka/get-cmake@latest
        if: steps.g4cache.outputs.cache-hit != 'true'

      - name: CMake configure Geant4 Unix
        if: steps.g4cache.outputs.cache-hit != 'true' && runner.os != 'Windows'
        run: >
            cmake -E env CXXFLAGS="-fPIC"
            cmake -E env CFLAGS="-fPIC" 
            cmake
            -GNinja
            -DBUILD_STATIC_LIBS=ON
            -DBUILD_SHARED_LIBS=OFF
            -DGEANT4_INSTALL_EXAMPLES=OFF
            -DGEANT4_USE_SYSTEM_EXPAT=OFF
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/${{ env.GEANT4_INSTALL_DIR }}"
            -S "${{ github.workspace }}/${{ env.GEANT4_SOURCE_DIR }}"
            -B "${{ github.workspace }}/${{ env.GEANT4_BUILD_DIR }}"

      - name: CMake configure Geant4 Windows
        if: steps.g4cache.outputs.cache-hit != 'true' && runner.os == 'Windows'
        run: >
            cmake
            -DBUILD_STATIC_LIBS=ON
            -DBUILD_SHARED_LIBS=OFF
            -DGEANT4_INSTALL_EXAMPLES=OFF
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/${{ env.GEANT4_INSTALL_DIR }}"
            -S "${{ github.workspace }}/${{ env.GEANT4_SOURCE_DIR }}"
            -B "${{ github.workspace }}/${{ env.GEANT4_BUILD_DIR }}"

      - name: CMake build Geant4
        if: steps.g4cache.outputs.cache-hit != 'true'
        run: cmake --build "${{ github.workspace }}/${{ env.GEANT4_BUILD_DIR }}" --config Release

      - name: CMake install Geant4
        if: steps.g4cache.outputs.cache-hit != 'true'
        run: >
            cmake
            --build "${{ github.workspace }}/${{ env.GEANT4_BUILD_DIR }}"
            --config Release
            --target install

      - name: Add Geant4 to the PATH
        shell: bash
        run: echo "${{ github.workspace }}/${{ env.GEANT4_INSTALL_DIR }}/bin" >> $GITHUB_PATH

      - uses: joerick/cibuildwheel@v1.11.0
        env:
          CIBW_BUILD: cp3*
          CIBW_ARCHS: native

      - uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl


  build_wheels_linux:
    name: Wheels for Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: joerick/cibuildwheel@v1.11.0
        env:
          CIBW_ENVIRONMENT_LINUX: "CXXFLAGS='-fPIC' CFLAGS='-fPIC'"
          CIBW_BEFORE_ALL_LINUX: >
              python -m pip install cmake && \
                git clone -b ${{ env.GEANT4_GIT_TAG }} --depth 1 \
                https://github.com/Geant4/geant4 \
                "{package}/${{ env.GEANT4_SOURCE_DIR }}" && \
                mkdir "{package}/${{ env.GEANT4_BUILD_DIR }}" && \
                cd "{package}/${{ env.GEANT4_BUILD_DIR }}" && \
                cmake \
                -DCMAKE_BUILD_TYPE=Release \
                -DBUILD_STATIC_LIBS=ON \
                -DBUILD_SHARED_LIBS=OFF \
                -DGEANT4_INSTALL_EXAMPLES=OFF \
                -DGEANT4_USE_SYSTEM_EXPAT=OFF \
                "{package}/${{ env.GEANT4_SOURCE_DIR }}" && \
                make -j8 && \
                make install

          CIBW_BUILD: cp3*
          CIBW_ARCHS: native

      - uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl


  upload_all:
    name: Upload wheels
    needs: [build_wheels, build_wheels_linux, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-python@v2

      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
